# Copyright (c) 2016, Neeraj Sharma <neeraj.sharma@alumni.iitg.ernet.in>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of helloer nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# The makefile including this must define the following for build to
# succeed.
#
# * PKGNAME  - name of the application as understood by Erlang/OTP.
# * PKGVSN   - the version of the application built for production.


LOCAL_PATH=$(shell pwd)
# prefix with local path in search path so that the "erl" application
# is used by rebar3 (via escript found in host_erlangdist/usr/local/bin)
# is from this path instead.
# This will allow running same erlang application on host as the
# one built for target for maximum consistency.
BUILT_ERL_BIN_PATH=$(LOCAL_PATH):$(LOCAL_PATH)/build/rumprun-packages/erlang/build/host_erlangdist/usr/local/bin

ERLANG_BASE_META_PATH=$(LOCAL_PATH)/build/rumprun-packages/erlang

ifeq ($(shell uname),Darwin)
RUMPRUN_GENISOIMAGE=hdiutil makehybrid -iso
else
RUMPRUN_GENISOIMAGE=genisoimage -l -r
endif


.PHONY: setup_rumprun build_rumprun build_rumprun_packages

setup_rumprun: build_rumprun build_rumprun_packages

build_rumprun: .rumprun_tuple

build/rumprun:
	mkdir -p build
	(cd build; \
	git clone http://repo.rumpkernel.org/rumprun; \
	cd rumprun; \
	git submodule update --init)

.rumprun_tuple: build/rumprun
	(cd build/rumprun; \
	CC=cc ./build-rr.sh hw)
	ls build/rumprun/rumprun/bin/*-gcc | rev | cut -f 1 -d'/' | cut -f2- -d'-' | rev > .rumprun_tuple

build_rumprun_packages: .rumprun_packages_built

build/rumprun-packages:
	(cd build; git clone http://repo.rumpkernel.org/rumprun-packages)

build/rumprun-packages/config.mk: build/rumprun-packages .rumprun_tuple
	(cd build/rumprun-packages; \
	sed -e "s/RUMPRUN_TOOLCHAIN_TUPLE=.*/RUMPRUN_TOOLCHAIN_TUPLE=$(shell cat .rumprun_tuple)/g" config.mk.dist > config.mk)
	

.rumprun_packages_built: build/rumprun-packages/config.mk
	(cd build/rumprun-packages/erlang; \
	PATH=$(LOCAL_PATH)/build/rumprun/rumprun/bin:$$PATH make; \
	PATH=$(LOCAL_PATH)/build/rumprun/rumprun/bin:$$PATH make beam.hw.bin)
	touch .rumprun_packages_built


erlang.iso: prod
	mkdir -p _deployed/lib/erlang
	(cd _deployed/lib/erlang; \
	 tar -xzf ../../../_build/prod/rel/$(PKGNAME)/$(PKGNAME)-$(PKGVSN).tar.gz)
	# copy the start.boot from application to its default location
	# where the beam vm expects it.
	(cd _deployed/lib/erlang/bin; \
	 rm start.boot; \
	 ln -s ../releases/$(PKGVSN)/start.boot start.boot)
	# copy meta information for base erlang config
	cp $(ERLANG_BASE_META_PATH)/erl_inetrc _deployed/
	cp $(ERLANG_BASE_META_PATH)/hosts.template _deployed/hosts
	cp $(ERLANG_BASE_META_PATH)/resolv.conf.template _deployed/resolv.conf
	# setnodename is required for clustering
	mkdir -p _deployed/lib/erlang/lib/setnodename-0.0.1/ebin
	cp build/rumprun-packages/erlang/examples/setnodename/*.beam _deployed/lib/erlang/lib/setnodename-0.0.1/ebin
	$(RUMPRUN_GENISOIMAGE) -o erlang.iso _deployed/


erlrun.sh: build_rumprun_packages
	cp build/rumprun-packages/erlang/erlrun.sh .
